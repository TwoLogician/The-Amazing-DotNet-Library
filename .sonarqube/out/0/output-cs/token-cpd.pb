À
p/Users/two/SoftwareDeveloper/Project/The-Amazing-DotNet-Library/Softveloper/Extensions/HttpRequestExtendsions.cs
	namespace 	
Softveloper
 
. 

Extensions  
{ 
public 

static 
class "
HttpRequestExtendsions .
{ 
public		 
static		 
string		 
GetStringValue		 +
(		+ ,
this		, 0
HttpRequest		1 <
request		= D
,		D E
string		F L
key		M P
)		P Q
{

 	
StringValues 
values 
=  !
string" (
.( )
Empty) .
;. /
var 
success 
= 
request !
.! "
Form" &
.& '
TryGetValue' 2
(2 3
key3 6
,6 7
out8 ;
values< B
)B C
;C D
if 
( 
success 
) 
{ 
var 
value 
= 
string "
." #
Join# '
(' (
string( .
.. /
Empty/ 4
,4 5
values6 <
)< =
;= >
return 
value 
; 
} 
return 
string 
. 
Empty 
;  
} 	
} 
} ¨
j/Users/two/SoftwareDeveloper/Project/The-Amazing-DotNet-Library/Softveloper/Extensions/StringExtensions.cs
	namespace 	
Softveloper
 
. 

Extensions  
{ 
public		 

static		 
class		 
StringExtensions		 (
{

 
public 
static 
string 
ToSha384 %
(% &
this& *
string+ 1
value2 7
)7 8
{ 	
if 
( 
string 
. 
IsNullOrEmpty $
($ %
value% *
)* +
)+ ,
{ 
return 
string 
. 
Empty #
;# $
} 
using 
( 
var 
sha 
= 
new  
SHA384Managed! .
(. /
)/ 0
)0 1
{ 
var 
	utf8Bytes 
= 
Encoding  (
.( )
UTF8) -
.- .
GetBytes. 6
(6 7
value7 <
)< =
;= >
var 
hash 
= 
sha 
. 
ComputeHash *
(* +
	utf8Bytes+ 4
)4 5
;5 6
return 
BitConverter #
.# $
ToString$ ,
(, -
hash- 1
)1 2
.2 3
Replace3 :
(: ;
$str; >
,> ?
string@ F
.F G
EmptyG L
)L M
;M N
} 
} 	
public 
static 
string 
ToSha512 %
(% &
this& *
string+ 1
value2 7
)7 8
{ 	
if 
( 
string 
. 
IsNullOrEmpty $
($ %
value% *
)* +
)+ ,
{ 
return 
string 
. 
Empty #
;# $
} 
using!! 
(!! 
var!! 
sha!! 
=!! 
new!!  
SHA512Managed!!! .
(!!. /
)!!/ 0
)!!0 1
{"" 
var## 
	utf8Bytes## 
=## 
Encoding##  (
.##( )
UTF8##) -
.##- .
GetBytes##. 6
(##6 7
value##7 <
)##< =
;##= >
var$$ 
hash$$ 
=$$ 
sha$$ 
.$$ 
ComputeHash$$ *
($$* +
	utf8Bytes$$+ 4
)$$4 5
;$$5 6
return%% 
BitConverter%% #
.%%# $
ToString%%$ ,
(%%, -
hash%%- 1
)%%1 2
.%%2 3
Replace%%3 :
(%%: ;
$str%%; >
,%%> ?
string%%@ F
.%%F G
Empty%%G L
)%%L M
;%%M N
}&& 
}'' 	
public)) 
static)) 
string)) 
ToValidFileName)) ,
()), -
this))- 1
string))2 8
fileName))9 A
)))A B
{** 	
var++  
invalidFileNameChars++ $
=++% &
Path++' +
.+++ ,#
GetInvalidFileNameChars++, C
(++C D
)++D E
.++E F
ToList++F L
(++L M
)++M N
;++N O 
invalidFileNameChars,,  
.,,  !
ForEach,,! (
(,,( )
	character,,) 2
=>,,3 5
fileName,,6 >
=,,? @
fileName,,A I
.,,I J
Replace,,J Q
(,,Q R
	character,,R [
.,,[ \
ToString,,\ d
(,,d e
),,e f
,,,f g
string,,h n
.,,n o
Empty,,o t
),,t u
),,u v
;,,v w
return-- 
fileName-- 
;-- 
}.. 	
}// 
}00 Ò
]/Users/two/SoftwareDeveloper/Project/The-Amazing-DotNet-Library/Softveloper/IO/Filerectory.cs
	namespace 	
Softveloper
 
. 
IO 
{ 
public 

static 
class 
Filerectory #
{ 
public 
static 
void 
CreateDirectory *
(* +
string+ 1
path2 6
)6 7
{		 	
if

 
(

 
!

 
	Directory

 
.

 
Exists

 !
(

! "
path

" &
)

& '
)

' (
{ 
	Directory 
. 
CreateDirectory )
() *
path* .
). /
;/ 0
} 
} 	
public 
static 
void 

DeleteFile %
(% &
string& ,
path- 1
)1 2
{ 	
if 
( 
File 
. 
Exists 
( 
path  
)  !
)! "
{ 
File 
. 
Delete 
( 
path  
)  !
;! "
} 
} 	
public 
static 
void 
WriteAllBytes (
(( )
string) /
path0 4
,4 5
byte6 :
[: ;
]; <
bytes= B
)B C
{ 	
var 
	directory 
= 
Path  
.  !
GetDirectoryName! 1
(1 2
path2 6
)6 7
;7 8
CreateDirectory 
( 
	directory %
)% &
;& '
File 
. 
WriteAllBytes 
( 
path #
,# $
bytes% *
)* +
;+ ,
} 	
public 
static 
void 
WriteAllText '
(' (
string( .
path/ 3
,3 4
string5 ;
contents< D
)D E
{   	
var!! 
	directory!! 
=!! 
Path!!  
.!!  !
GetDirectoryName!!! 1
(!!1 2
path!!2 6
)!!6 7
;!!7 8
CreateDirectory"" 
("" 
	directory"" %
)""% &
;""& '
File## 
.## 
WriteAllText## 
(## 
path## "
,##" #
contents##$ ,
)##, -
;##- .
}$$ 	
}%% 
}&& ˛
[/Users/two/SoftwareDeveloper/Project/The-Amazing-DotNet-Library/Softveloper/Net/HostInfo.cs
	namespace 	
Softveloper
 
. 
Net 
{ 
public 

static 
class 
HostInfo  
{		 
public

 
static

 
string

 
GetIpv4

 $
(

$ %
)

% &
{ 	
var 
hostName 
= 
Dns 
. 
GetHostName *
(* +
)+ ,
;, -
return 
GetIpv4 
( 
hostName #
)# $
;$ %
} 	
public 
static 
string 
GetIpv4 $
($ %
string% +
hostName, 4
)4 5
{ 	
var 
hostInfo 
= 
Dns 
. 
GetHostEntry +
(+ ,
hostName, 4
)4 5
;5 6
var 
	ipAddress 
= 
hostInfo $
.$ %
AddressList% 0
.0 1
FirstOrDefault1 ?
(? @
x@ A
=>B D
xE F
.F G
AddressFamilyG T
==U W
AddressFamilyX e
.e f
InterNetworkf r
)r s
;s t
return 
	ipAddress 
? 
. 
ToString &
(& '
)' (
??) +
string, 2
.2 3
Empty3 8
;8 9
} 	
} 
} è:
b/Users/two/SoftwareDeveloper/Project/The-Amazing-DotNet-Library/Softveloper/Net/Mail/MailClient.cs
	namespace 	
Softveloper
 
. 
Net 
. 
Mail 
{		 
public

 
class

 

MailClient

 
{ 
public 
string	 
Address 
{ 
get 
; 
set "
;" #
}$ %
=& '
string( .
.. /
Empty/ 4
;4 5
public 
string	 
Body 
{ 
get 
; 
set 
;  
}! "
=# $
string% +
.+ ,
Empty, 1
;1 2
public 
Encoding	 
BodyEncoding 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
Encoding/ 7
.7 8
UTF88 <
;< =
public 
List	 
< 
string 
> 
Cc 
{ 
get 
; 
set  #
;# $
}% &
=' (
new) ,
List- 1
<1 2
string2 8
>8 9
(9 :
): ;
;; <
public 
string	 
DisplayName 
{ 
get !
;! "
set# &
;& '
}( )
=* +
string, 2
.2 3
Empty3 8
;8 9
public 
Encoding	 
DisplayNameEncoding %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
=4 5
Encoding6 >
.> ?
UTF8? C
;C D
public 
bool	 
	EnableSsl 
{ 
get 
; 
set "
;" #
}$ %
public 
string	 
Host 
{ 
get 
; 
set 
;  
}! "
=# $
string% +
.+ ,
Empty, 1
;1 2
public 
string	 
Password 
{ 
get 
; 
set  #
;# $
}% &
=' (
string) /
./ 0
Empty0 5
;5 6
public 
int	 
Port 
{ 
get 
; 
set 
; 
} 
public 
string	 
Subject 
{ 
get 
; 
set "
;" #
}$ %
=& '
string( .
.. /
Empty/ 4
;4 5
public 
Encoding	 
SubjectEncoding !
{" #
get$ '
;' (
set) ,
;, -
}. /
=0 1
Encoding2 :
.: ;
UTF8; ?
;? @
public 
List	 
< 
string 
> 
To 
{ 
get 
; 
set  #
;# $
}% &
=' (
new) ,
List- 1
<1 2
string2 8
>8 9
(9 :
): ;
;; <
public 
string	 
Username 
{ 
get 
; 
set  #
;# $
}% &
=' (
string) /
./ 0
Empty0 5
;5 6
public 

MailClient	 
( 
) 
{ 
} 
public 

MailClient	 
( 
string 
host 
,  
int! $
port% )
)) *
=>+ -
(. /
Host/ 3
,3 4
Port5 9
)9 :
=; <
(= >
host> B
,B C
portD H
)H I
;I J
public 

MailClient	 
( 
string 
host 
,  
int! $
port% )
,) *
string+ 1
username2 :
,: ;
string< B
passwordC K
)K L
=>M O
(P Q
HostQ U
,U V
PortW [
,[ \
Username] e
,e f
Passwordg o
)o p
=q r
(s t
hostt x
,x y
portz ~
,~ 
username
Ä à
,
à â
password
ä í
)
í ì
;
ì î
public!! 
void!!	 
Send!! 
(!! 
)!! 
{"" 
using## 
(##	 

var##
 
client## 
=## 
new## 

SmtpClient## %
(##% &
Host##& *
,##* +
Port##, 0
)##0 1
)##1 2
{$$ 
client%% 

.%%
 
Credentials%% 
=%% 
new%% 
NetworkCredential%% .
(%%. /
Username%%/ 7
,%%7 8
Password%%9 A
)%%A B
;%%B C
client&& 

.&&
 
	EnableSsl&& 
=&& 
	EnableSsl&&  
;&&  !
var(( 
from(( 
=(( 
new(( 
MailAddress(( 
((( 
Address(( &
)((& '
;((' (
if)) 
()) 
!)) 	
string))	 
.)) 
IsNullOrEmpty)) 
()) 
DisplayName)) )
)))) *
)))* +
{** 
from++ 	
=++
 
new++ 
MailAddress++ 
(++ 
Address++ #
,++# $
DisplayName++% 0
,++0 1
DisplayNameEncoding++2 E
)++E F
;++F G
},, 
var.. 
message.. 
=.. 
new.. 
MailMessage.. !
(..! "
).." #
;..# $
message// 
.// 
Body// 
=// 
Body// 
;// 
message00 
.00 
BodyEncoding00 
=00 
BodyEncoding00 '
;00' (
Cc11 
.11 
ForEach11 
(11 
message11 
.11 
CC11 
.11 
Add11 
)11 
;11 
message22 
.22 
From22 
=22 
from22 
;22 
message33 
.33 
Subject33 
=33 
Subject33 
;33 
message44 
.44 
SubjectEncoding44 
=44 
SubjectEncoding44 -
;44- .
To55 
.55 
ForEach55 
(55 
message55 
.55 
To55 
.55 
Add55 
)55 
;55 
client66 

.66
 
Send66 
(66 
message66 
)66 
;66 
message77 
.77 
Dispose77 
(77 
)77 
;77 
}88 
}99 
}:: 
};; 